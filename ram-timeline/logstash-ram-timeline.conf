input {
        file {
                path => [ "/home/dsplice/timeline.csv" ]
                start_position => "beginning"
                sincedb_path => "/dev/null"
        }
}

filter {

        csv {
                columns => [datetime,size,macb,mode,uid,gid,meta,description]
        }

        mutate {
                remove_field => [ "message" ]
        }

        date {
                match => [ "datetime","EEE MMM dd yyyy HH:mm:ss"]
        }

        mutate {
                remove_field => [ "datetime" ]
        }
		
	grok {
		match => { "description" => "\[%{GREEDYDATA:type}\] %{GREEDYDATA:message}" }
	}
	if [type] == "MFT FILE_NAME" or [type] == "MFT STD_INFO" {
		grok {
			match => { "message" => "%{GREEDYDATA:filepath} \(Offset: 0x" }
		}
	} else if [type] == "DLL LOADTIME (dll)" or [type] == "DLL LOADTIME (exe)" or [type] == "PE DEBUG" or [type] == "PE HEADER 32-bit (dll)" or [type} == "PE HEADER (exe)" or [type] == "PE HEADER (dll)" {
		grok {
			match => { "message" => "%{GREEDYDATA:imagename} Process: %{GREEDYDATA:processname}/PID: %{NUMBER:pid}/PPID: %{NUMBER:ppid}" }
		}
	} else if [type] == "SHELLBAGS FILE_ENTRY" or [type] == "SHELLBAGS ITEMPOS" {
		grok {
			match => { "message" => "Name: %{GREEDYDATA:filename}/Attrs: %{WORD:attrib}/FullPath: %{GREEDYDATA:fullpath}/Registry: %{GREEDYDATA:reghive} /Key: %{GREEDYDATA:regkey}/LW: %{TIMESTAMP_ISO8601:datestamp}" }
		}
		date {
			match => [ "datestamp","YYYY-MM-dd HH:mm:ss"]
		}
		mutate {
			remove_field => [ "datestamp" ]
		}
	} else if [type] == "Handle (Key)" {
		grok {
			match => { "message" => "%{GREEDYDATA:regkey} %{GREEDYDATA:processname} PID: %{NUMBER:pid}/PPID: %{NUMBER:ppid}" }
		}
	} else if [type] == "CHROMECOOKIES" {
		grok {
			match => { "message" => "%{HOSTNAME:hostname}" }
		}
	} else if [type] == "CHROMEHISTORY" {
		grok {
			match => { "message" => "%{URI:uri}" }
		}
	} else if [type] == "SHIMCACHE" {
		grok {
			match => { "message" => "%{GREEDYDATA:filepath}" }
		}
	} else if [type] == "SYMLINK" {
		grok {
			match => { "message" => "%{GREEDYDATA:srclnk}->%{GREEDYDATA:dstlnk} POffset: " }
		}
	} else if [type] == "PROCESS" {
		grok {
			match => { "message" => "%{GREEDYDATA:processname} PID: %{INT:pid}/PPID: %{INT:ppid}" }
		}
	} else if [type] == "NETWORK CONNECTION" {
		grok {
			match => { "message" => ["%{IP:srcip}:%{INT:srcport} -> %{IP:dstip}:%{INT:dstport} (?<pid>[0-9-]{1,8})/%{WORD:protocol}/%{WORD:connectionstate}", "%{IP:srcip}:%{INT:srcport} -> \*:\* %{INT:pid}" ] }
		}
	} else if [type] == "USER ASSIST" {
		grok {
			match => { "message" => "%{GREEDYDATA:filepath} Registry: %{GREEDYDATA:reghive} /ID: " }
		}
	}
}

output {
        elasticsearch {
                hosts => [ "http://127.0.0.1:9200/" ]
                index => "ramtimeline-case1"
                document_type => "ram_timeline"
        }
}
